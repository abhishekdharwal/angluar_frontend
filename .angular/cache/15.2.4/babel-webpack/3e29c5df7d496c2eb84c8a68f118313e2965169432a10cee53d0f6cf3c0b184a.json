{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/expansion\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nfunction ListComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\nfunction ListComponent_mat_accordion_2_mat_expansion_panel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\")(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"mat-action-row\")(8, \"button\", 4);\n    i0.ɵɵtext(9, \"EDIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ListComponent_mat_accordion_2_mat_expansion_panel_1_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onDelete(task_r4._id));\n    });\n    i0.ɵɵtext(11, \"DELETE\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", task_r4.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r4.description, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r4._id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, task_r4._id));\n  }\n}\nfunction ListComponent_mat_accordion_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-accordion\");\n    i0.ɵɵtemplate(1, ListComponent_mat_accordion_2_mat_expansion_panel_1_Template, 12, 6, \"mat-expansion-panel\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.storedTasks);\n  }\n}\nfunction ListComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1, \"No Task Available\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ListComponent {\n  constructor(tasksService) {\n    this.tasksService = tasksService;\n    // tasks = [\n    //   { title: 'code for anuglar', description: 'mdule' },\n    //   { title: 'code for anuglar', description: 'mdule' },\n    // ];\n    this.storedTasks = [];\n    this.isLoading = false;\n    // tasks = [];\n    this.enteredTitle = '';\n  }\n  ngOnInit() {\n    this.tasksService.getTask();\n    this.isLoading = true;\n    this.tasksSub = this.tasksService.getTaskUpdateListener().subscribe(tasks => {\n      this.storedTasks = tasks;\n      this.isLoading = false;\n    });\n  }\n  ngOnDestroy() {\n    this.tasksSub.unsubscribe();\n  }\n  onDelete(id) {\n    this.tasksService.deleteTask(id);\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[1, \"div1\"], [4, \"ngIf\"], [\"class\", \"mat-panel-title\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 3, \"routerLink\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"mat-panel-title\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ListComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ListComponent_mat_accordion_2_Template, 2, 1, \"mat-accordion\", 1);\n      i0.ɵɵtemplate(3, ListComponent_p_3_Template, 2, 0, \"p\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.storedTasks.length <= 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.MatButton, i5.MatAccordion, i5.MatExpansionPanel, i5.MatExpansionPanelActionRow, i5.MatExpansionPanelHeader, i5.MatExpansionPanelTitle, i6.MatProgressSpinner],\n  styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvY3JlYXRlL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IACEA,8BAA6C;;;;;;;;;IAM7CA,2CAAsD;IAGhDA,YACF;IAAAA,iBAAkB;IAEpBA,YACA;IAAAA,qBAAM;IACNA,YACA;IAAAA,sCAAgB;IACwCA,oBAAI;IAAAA,iBAAS;IACnEA,kCAAgD;IAA7BA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAR7DA,eACF;IADEA,8CACF;IAEFA,eACA;IADAA,oDACA;IACAA,eACA;IADAA,4CACA;IACqBA,eAAkC;IAAlCA,oEAAkC;;;;;IAd3DA,qCAAkC;IAIhCA,+GAasB;IAAAA,iBACvB;;;;IAduCA,eAAc;IAAdA,4CAAc;;;;;IAgBtDA,4BAA2D;IAAAA,iCAAiB;IAAAA,iBAAI;;;ACbhF,OAAM,MAAOC,aAAa;EAQxBC,YAAmBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAP/B;IACA;IACA;IACA;IACA,gBAAW,GAAW,EAAE;IAExB,cAAS,GAAG,KAAK;IAGjB;IACA,iBAAY,GAAG,EAAE;EAH+B;EAKhDC,QAAQ;IACN,IAAI,CAACD,YAAY,CAACE,OAAO,EAAE;IAC3B,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,YAAY,CAC9BK,qBAAqB,EAAE,CACvBC,SAAS,CAAEC,KAAa,IAAI;MAC3B,IAAI,CAACC,WAAW,GAAGD,KAAK;MACxB,IAAI,CAACJ,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC;EACN;EACAM,WAAW;IACT,IAAI,CAACL,QAAQ,CAACM,WAAW,EAAE;EAC7B;EACAC,QAAQ,CAACC,EAAU;IACjB,IAAI,CAACZ,YAAY,CAACa,UAAU,CAACD,EAAE,CAAC;EAClC;;AA5BWd,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1BrB,8BAAkB;MAChBA,8EAA6C;MAC/CA,iBAAM;MACNA,kFAkBC;MAEDA,0DAAgF;;;MAtBhEA,eAAe;MAAfA,oCAAe;MAEfA,eAAgB;MAAhBA,qCAAgB;MAoBJA,eAA6B;MAA7BA,kDAA6B","names":["i0","ListComponent","constructor","tasksService","ngOnInit","getTask","isLoading","tasksSub","getTaskUpdateListener","subscribe","tasks","storedTasks","ngOnDestroy","unsubscribe","onDelete","id","deleteTask","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/list/list.component.html","/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/list/list.component.ts"],"sourcesContent":["<div class=\"div1\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n</div>\n<mat-accordion *ngIf=\"!isLoading\">\n  <!-- <mat-form-field>\n    <input matInput type=\"text\" [(ngModel)]=\"enteredTitle\" />\n  </mat-form-field> -->\n  <mat-expansion-panel *ngFor=\"let task of storedTasks\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{ task.title }}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    {{ task.description }}\n    <br />\n    {{ task._id }}\n    <mat-action-row>\n      <button mat-button [routerLink]=\"['/edit', task._id]\">EDIT</button>\n      <button mat-button (click)=\"onDelete(task._id)\">DELETE</button>\n    </mat-action-row>\n  </mat-expansion-panel></mat-accordion\n>\n\n<p class=\"mat-panel-title\" *ngIf=\"storedTasks.length <= 0\">No Task Available</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Task } from '../../task.model';\nimport { TasksService } from '../../task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit, OnDestroy {\n  // tasks = [\n  //   { title: 'code for anuglar', description: 'mdule' },\n  //   { title: 'code for anuglar', description: 'mdule' },\n  // ];\n  storedTasks: Task[] = [];\n  private tasksSub: Subscription;\n  isLoading = false;\n  constructor(public tasksService: TasksService) {}\n\n  // tasks = [];\n  enteredTitle = '';\n\n  ngOnInit() {\n    this.tasksService.getTask();\n    this.isLoading = true;\n    this.tasksSub = this.tasksService\n      .getTaskUpdateListener()\n      .subscribe((tasks: Task[]) => {\n        this.storedTasks = tasks;\n        this.isLoading = false;\n      });\n  }\n  ngOnDestroy() {\n    this.tasksSub.unsubscribe();\n  }\n  onDelete(id: string) {\n    this.tasksService.deleteTask(id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}