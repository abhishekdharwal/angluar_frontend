{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/expansion\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/paginator\";\nfunction ListComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\nfunction ListComponent_mat_accordion_2_mat_expansion_panel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\")(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"div\", 5);\n    i0.ɵɵelement(8, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-action-row\")(10, \"button\", 7);\n    i0.ɵɵtext(11, \"EDIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ListComponent_mat_accordion_2_mat_expansion_panel_1_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onDelete(task_r4._id));\n    });\n    i0.ɵɵtext(13, \"DELETE\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", task_r4.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r4.description, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r4._id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", task_r4.imagePath, i0.ɵɵsanitizeUrl)(\"alt\", task_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, task_r4._id));\n  }\n}\nfunction ListComponent_mat_accordion_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-accordion\");\n    i0.ɵɵtemplate(1, ListComponent_mat_accordion_2_mat_expansion_panel_1_Template, 14, 8, \"mat-expansion-panel\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.storedTasks);\n  }\n}\nfunction ListComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \"No Task Available\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ListComponent {\n  constructor(tasksService) {\n    this.tasksService = tasksService;\n    // tasks = [\n    //   { title: 'code for anuglar', description: 'mdule' },\n    //   { title: 'code for anuglar', description: 'mdule' },\n    // ];\n    this.storedTasks = [];\n    this.isLoading = false;\n    // tasks = [];\n    this.enteredTitle = '';\n    this.totalTasks = 100;\n    this.pageSize = 10;\n    this.pageSizeOptions = [1, 5, 10, 100];\n  }\n  ngOnInit() {\n    this.tasksService.getTask(this.pageSize, 0);\n    this.isLoading = true;\n    this.tasksSub = this.tasksService.getTaskUpdateListener().subscribe(taskData => {\n      this.storedTasks = tasks;\n      this.isLoading = false;\n    });\n  }\n  ngOnDestroy() {\n    this.tasksSub.unsubscribe();\n  }\n  onChangePage(event) {\n    console.log(event);\n    this.pageSize = event.pageSize;\n    this.tasksService.getTask(this.pageSize, event.pageIndex);\n  }\n  onDelete(id) {\n    this.tasksService.deleteTask(id);\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 5,\n  vars: 6,\n  consts: [[1, \"div1\"], [4, \"ngIf\"], [3, \"length\", \"pageSize\", \"pageSizeOptions\", \"page\"], [\"class\", \"mat-panel-title\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"task-image\"], [3, \"src\", \"alt\"], [\"mat-button\", \"\", 3, \"routerLink\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"mat-panel-title\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ListComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ListComponent_mat_accordion_2_Template, 2, 1, \"mat-accordion\", 1);\n      i0.ɵɵelementStart(3, \"mat-paginator\", 2);\n      i0.ɵɵlistener(\"page\", function ListComponent_Template_mat_paginator_page_3_listener($event) {\n        return ctx.onChangePage($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, ListComponent_p_4_Template, 2, 0, \"p\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"length\", ctx.totalTasks)(\"pageSize\", ctx.pageSize)(\"pageSizeOptions\", ctx.pageSizeOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.storedTasks.length <= 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.MatButton, i5.MatAccordion, i5.MatExpansionPanel, i5.MatExpansionPanelActionRow, i5.MatExpansionPanelHeader, i5.MatExpansionPanelTitle, i6.MatProgressSpinner, i7.MatPaginator],\n  styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n\\n.div1[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n}\\n\\n.task-image[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.task-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvY3JlYXRlL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxXQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxXQUFBO0VBQ0EsMENBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tdG9wOiAxcmVtO1xyXG59XHJcblxyXG4uZGl2MSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4udGFzay1pbWFnZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnRhc2staW1hZ2UgaW1nIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3gtc2hhZG93OiAxcHggMXB4IDVweCByZ2JhKCRjb2xvcjogIzAwMDAwMCwgJGFscGhhOiAwLjUpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IACEA,8BAA6C;;;;;;;;;IAM7CA,2CAAsD;IAGhDA,YACF;IAAAA,iBAAkB;IAEpBA,YACA;IAAAA,qBAAM;IACNA,YACA;IAAAA,8BAAwB;IACtBA,yBAAiD;IACnDA,iBAAM;IACNA,sCAAgB;IACwCA,qBAAI;IAAAA,iBAAS;IACnEA,kCAAgD;IAA7BA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAX7DA,eACF;IADEA,8CACF;IAEFA,eACA;IADAA,oDACA;IACAA,eACA;IADAA,4CACA;IACOA,eAAsB;IAAtBA,yDAAsB;IAGRA,eAAkC;IAAlCA,oEAAkC;;;;;IAjB3DA,qCAAkC;IAIhCA,+GAgBsB;IAAAA,iBACvB;;;;IAjBuCA,eAAc;IAAdA,4CAAc;;;;;IAwBtDA,4BAA2D;IAAAA,iCAAiB;IAAAA,iBAAI;;;ACpBhF,OAAM,MAAOC,aAAa;EAQxBC,YAAmBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAP/B;IACA;IACA;IACA;IACA,gBAAW,GAAW,EAAE;IAExB,cAAS,GAAG,KAAK;IAGjB;IACA,iBAAY,GAAG,EAAE;IACjB,eAAU,GAAG,GAAG;IAChB,aAAQ,GAAG,EAAE;IACb,oBAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;EANe;EAOhDC,QAAQ;IACN,IAAI,CAACD,YAAY,CAACE,OAAO,CAAC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IAC3C,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACL,YAAY,CAC9BM,qBAAqB,EAAE,CACvBC,SAAS,CAAEC,QAAa,IAAI;MAC3B,IAAI,CAACC,WAAW,GAAGC,KAAK;MACxB,IAAI,CAACN,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC;EACN;EACAO,WAAW;IACT,IAAI,CAACN,QAAQ,CAACO,WAAW,EAAE;EAC7B;EACAC,YAAY,CAACC,KAAgB;IAC3BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,IAAI,CAACX,QAAQ,GAAGW,KAAK,CAACX,QAAQ;IAC9B,IAAI,CAACH,YAAY,CAACE,OAAO,CAAC,IAAI,CAACC,QAAQ,EAAEW,KAAK,CAACG,SAAS,CAAC;EAC3D;EAEAC,QAAQ,CAACC,EAAU;IACjB,IAAI,CAACnB,YAAY,CAACoB,UAAU,CAACD,EAAE,CAAC;EAClC;;AApCWrB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX1B5B,8BAAkB;MAChBA,8EAA6C;MAC/CA,iBAAM;MACNA,kFAqBC;MACDA,wCAKC;MADCA;QAAA,OAAQ6B,wBAAoB;MAAA,EAAC;MAC9B7B,iBAAgB;MACjBA,0DAAgF;;;MA9BhEA,eAAe;MAAfA,oCAAe;MAEfA,eAAgB;MAAhBA,qCAAgB;MAuB9BA,eAAqB;MAArBA,uCAAqB;MAKKA,eAA6B;MAA7BA,kDAA6B","names":["i0","ListComponent","constructor","tasksService","ngOnInit","getTask","pageSize","isLoading","tasksSub","getTaskUpdateListener","subscribe","taskData","storedTasks","tasks","ngOnDestroy","unsubscribe","onChangePage","event","console","log","pageIndex","onDelete","id","deleteTask","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/list/list.component.html","/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/list/list.component.ts"],"sourcesContent":["<div class=\"div1\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n</div>\n<mat-accordion *ngIf=\"!isLoading\">\n  <!-- <mat-form-field>\n    <input matInput type=\"text\" [(ngModel)]=\"enteredTitle\" />\n  </mat-form-field> -->\n  <mat-expansion-panel *ngFor=\"let task of storedTasks\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{ task.title }}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    {{ task.description }}\n    <br />\n    {{ task._id }}\n    <div class=\"task-image\">\n      <img [src]=\"task.imagePath\" [alt]=\"task.title\" />\n    </div>\n    <mat-action-row>\n      <button mat-button [routerLink]=\"['/edit', task._id]\">EDIT</button>\n      <button mat-button (click)=\"onDelete(task._id)\">DELETE</button>\n    </mat-action-row>\n  </mat-expansion-panel></mat-accordion\n>\n<mat-paginator\n  [length]=\"totalTasks\"\n  [pageSize]=\"pageSize\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"onChangePage($event)\"\n></mat-paginator>\n<p class=\"mat-panel-title\" *ngIf=\"storedTasks.length <= 0\">No Task Available</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Subscription } from 'rxjs';\nimport { Task } from '../../task.model';\nimport { TasksService } from '../../task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit, OnDestroy {\n  // tasks = [\n  //   { title: 'code for anuglar', description: 'mdule' },\n  //   { title: 'code for anuglar', description: 'mdule' },\n  // ];\n  storedTasks: Task[] = [];\n  private tasksSub: Subscription;\n  isLoading = false;\n  constructor(public tasksService: TasksService) {}\n\n  // tasks = [];\n  enteredTitle = '';\n  totalTasks = 100;\n  pageSize = 10;\n  pageSizeOptions = [1, 5, 10, 100];\n  ngOnInit() {\n    this.tasksService.getTask(this.pageSize, 0);\n    this.isLoading = true;\n    this.tasksSub = this.tasksService\n      .getTaskUpdateListener()\n      .subscribe((taskData: any) => {\n        this.storedTasks = tasks;\n        this.isLoading = false;\n      });\n  }\n  ngOnDestroy() {\n    this.tasksSub.unsubscribe();\n  }\n  onChangePage(event: PageEvent) {\n    console.log(event);\n    this.pageSize = event.pageSize;\n    this.tasksService.getTask(this.pageSize, event.pageIndex);\n  }\n\n  onDelete(id: string) {\n    this.tasksService.deleteTask(id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}