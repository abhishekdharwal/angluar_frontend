{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/progress-spinner\";\nimport * as i9 from \"@angular/forms\";\nfunction CreateTaskComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction CreateTaskComponent_mat_card_2_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter the title\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateTaskComponent_mat_card_2_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter the description\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateTaskComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 2, 3);\n    i0.ɵɵlistener(\"submit\", function CreateTaskComponent_mat_card_2_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const _r2 = i0.ɵɵreference(2);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onCreateTask(_r2));\n    });\n    i0.ɵɵelementStart(3, \"mat-form-field\");\n    i0.ɵɵelement(4, \"input\", 4, 5);\n    i0.ɵɵtemplate(6, CreateTaskComponent_mat_card_2_mat_error_6_Template, 2, 0, \"mat-error\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-form-field\", 6)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Create Your task \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"textarea\", 7, 8);\n    i0.ɵɵtemplate(12, CreateTaskComponent_mat_card_2_mat_error_12_Template, 2, 0, \"mat-error\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 9);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"uppercase\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(5);\n    const _r5 = i0.ɵɵreference(11);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.task == null ? null : ctx_r1.task.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r3.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.task == null ? null : ctx_r1.task.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r5.invalid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 5, ctx_r1.mode), \" \");\n  }\n}\nexport class CreateTaskComponent {\n  constructor(tasksService, route) {\n    this.tasksService = tasksService;\n    this.route = route;\n    this.newTask = 'abhi';\n    this.enteredValue = 'Hey';\n    this.enteredTitle = ' ';\n    this.enteredDescription = '';\n    this.mode = 'create';\n    this.id = null;\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(res => {\n      if (res.has('id')) {\n        this.mode = 'edit';\n        this.id = res.get('id');\n        this.isLoading = true;\n        this.tasksService.getTasks(this.id).subscribe(res => {\n          delete res.data.__v;\n          this.task = res.data;\n          this.isLoading = false;\n        });\n      } else {\n        this.mode = 'create';\n        this.id = null;\n      }\n    });\n  }\n  onCreateTask(form) {\n    if (!form.valid) return;\n    const task = {\n      _id: null,\n      title: form.value.title,\n      description: form.value.description\n    };\n    if (this.mode === 'create') {\n      this.tasksService.addTask(task);\n    }\n    if (this.mode === 'edit') {\n      task._id = this.task._id;\n      this.tasksService.updateTask(task);\n    }\n    form.resetForm();\n  }\n}\nCreateTaskComponent.ɵfac = function CreateTaskComponent_Factory(t) {\n  return new (t || CreateTaskComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nCreateTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTaskComponent,\n  selectors: [[\"app-task-create\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"div1\"], [4, \"ngIf\"], [3, \"submit\"], [\"taskForm\", \"ngForm\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"title\", \"required\", \"\", 3, \"ngModel\"], [\"title\", \"ngModel\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"name\", \"description\", \"placeholder\", \"Type your task\", \"required\", \"\", 3, \"ngModel\"], [\"description\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\", 1, \"btn-1\"]],\n  template: function CreateTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CreateTaskComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CreateTaskComponent_mat_card_2_Template, 16, 7, \"mat-card\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i3.NgIf, i4.MatInput, i5.MatFormField, i5.MatLabel, i5.MatError, i6.MatCard, i7.MatButton, i8.MatProgressSpinner, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.RequiredValidator, i3.UpperCasePipe],\n  styles: [\"mat-card[_ngcontent-%COMP%] {\\n  border: 1px solid;\\n  box-shadow: 1px 1px;\\n  margin-top: 10px;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.btn-1[_ngcontent-%COMP%] {\\n  width: 20%;\\n  margin-bottom: 8px;\\n  margin-left: 8px;\\n}\\n\\n.div1[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUNBOztFQUVFLFdBQUE7QUFFRjs7QUFDQTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FBRUY7O0FBQUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFHRiIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZDtcclxuICBib3gtc2hhZG93OiAxcHggMXB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxubWF0LWZvcm0tZmllbGQsXHJcbnRleHRhcmVhIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmJ0bi0xIHtcclxuICB3aWR0aDogMjAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDhweDtcclxuICBtYXJnaW4tbGVmdDogOHB4O1xyXG59XHJcbi5kaXYxIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;IACEA,8BAA6C;;;;;IAazCA,iCAAiC;IAAAA,sCAAsB;IAAAA,iBAAY;;;;;IAYnEA,iCACG;IAAAA,4CAA4B;IAAAA,iBAC9B;;;;;;IAzBPA,gCAA6B;IACrBA;MAAAA;MAAA;MAAA;MAAA,OAAUA,uCAAsB;IAAA,EAAC;IACrCA,sCAAgB;IACdA,8BAOE;IACFA,2FAAmE;IACrEA,iBAAiB;IACjBA,yCAA2C;IAC9BA,iCAAiB;IAAAA,iBAAY;IACxCA,kCAOY;IACZA,6FAEC;IACHA,iBAAiB;IACjBA,kCAAqE;IACnEA,aACF;;IAAAA,iBAAS;;;;;;IAtBLA,eAAuB;IAAvBA,wEAAuB;IAIbA,eAAmB;IAAnBA,kCAAmB;IAO7BA,eAA6B;IAA7BA,8EAA6B;IAKnBA,eAAyB;IAAzBA,kCAAyB;IAKrCA,eACF;IADEA,mEACF;;;ACrBJ,OAAM,MAAOC,mBAAmB;EAU9BC,YACSC,YAA0B,EAC1BC,KAAqB;IADrB,iBAAY,GAAZD,YAAY;IACZ,UAAK,GAALC,KAAK;IAXd,YAAO,GAAG,MAAM;IAChB,iBAAY,GAAG,KAAK;IACpB,iBAAY,GAAG,GAAG;IAClB,uBAAkB,GAAG,EAAE;IAChB,SAAI,GAAG,QAAQ;IACd,OAAE,GAAW,IAAI;IAEzB,cAAS,GAAG,KAAK;EAKd;EAEHC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,SAAS,CAAEC,GAAa,IAAI;MAC9C,IAAIA,GAAG,CAACC,GAAG,CAAC,IAAI,CAAC,EAAE;QACjB,IAAI,CAACC,IAAI,GAAG,MAAM;QAClB,IAAI,CAACC,EAAE,GAAGH,GAAG,CAACI,GAAG,CAAC,IAAI,CAAC;QACvB,IAAI,CAACC,SAAS,GAAG,IAAI;QACrB,IAAI,CAACV,YAAY,CAACW,QAAQ,CAAC,IAAI,CAACH,EAAE,CAAC,CAACJ,SAAS,CAAEC,GAAQ,IAAI;UACzD,OAAOA,GAAG,CAACO,IAAI,CAACC,GAAG;UACnB,IAAI,CAACC,IAAI,GAAGT,GAAG,CAACO,IAAI;UACpB,IAAI,CAACF,SAAS,GAAG,KAAK;QACxB,CAAC,CAAC;OACH,MAAM;QACL,IAAI,CAACH,IAAI,GAAG,QAAQ;QACpB,IAAI,CAACC,EAAE,GAAG,IAAI;;IAElB,CAAC,CAAC;EACJ;EACAO,YAAY,CAACC,IAAY;IACvB,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;IACjB,MAAMH,IAAI,GAAS;MACjBI,GAAG,EAAE,IAAI;MACTC,KAAK,EAAEH,IAAI,CAACI,KAAK,CAACD,KAAK;MACvBE,WAAW,EAAEL,IAAI,CAACI,KAAK,CAACC;KACzB;IACD,IAAI,IAAI,CAACd,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAI,CAACP,YAAY,CAACsB,OAAO,CAACR,IAAI,CAAC;;IAEjC,IAAI,IAAI,CAACP,IAAI,KAAK,MAAM,EAAE;MACxBO,IAAI,CAACI,GAAG,GAAG,IAAI,CAACJ,IAAI,CAACI,GAAG;MACxB,IAAI,CAAClB,YAAY,CAACuB,UAAU,CAACT,IAAI,CAAC;;IAEpCE,IAAI,CAACQ,SAAS,EAAE;EAClB;;AA/CW1B,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXhChC,8BAAkB;MAChBA,oFAA6C;MAC/CA,iBAAM;MACNA,+EA+BW;;;MAjCKA,eAAe;MAAfA,oCAAe;MAEpBA,eAAgB;MAAhBA,qCAAgB","names":["i0","CreateTaskComponent","constructor","tasksService","route","ngOnInit","paramMap","subscribe","res","has","mode","id","get","isLoading","getTasks","data","__v","task","onCreateTask","form","valid","_id","title","value","description","addTask","updateTask","resetForm","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/create.component.html","/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/create.component.ts"],"sourcesContent":["<div class=\"div1\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n</div>\r\n<mat-card *ngIf=\"!isLoading\">\r\n  <form (submit)=\"onCreateTask(taskForm)\" #taskForm=\"ngForm\">\r\n    <mat-form-field>\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        name=\"title\"\r\n        [ngModel]=\"task?.title\"\r\n        required\r\n        #title=\"ngModel\"\r\n      />\r\n      <mat-error *ngIf=\"title.invalid\">Please enter the title</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Create Your task </mat-label>\r\n      <textarea\r\n        matInput\r\n        name=\"description\"\r\n        [ngModel]=\"task?.description\"\r\n        placeholder=\"Type your task\"\r\n        required\r\n        #description=\"ngModel\"\r\n      ></textarea>\r\n      <mat-error *ngIf=\"description.invalid\"\r\n        >Please enter the description</mat-error\r\n      >\r\n    </mat-form-field>\r\n    <button class=\"btn-1\" mat-raised-button color=\"accent\" type=\"submit\">\r\n      {{ mode | uppercase }}\r\n    </button>\r\n  </form>\r\n</mat-card>\r\n\r\n<!-- (click)=\"onCreateTask()\" -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Task } from '../task.model';\r\nimport { Form, FormGroup, NgForm } from '@angular/forms';\r\nimport { TasksService } from '../task.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-task-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n})\r\nexport class CreateTaskComponent implements OnInit {\r\n  newTask = 'abhi';\r\n  enteredValue = 'Hey';\r\n  enteredTitle = ' ';\r\n  enteredDescription = '';\r\n  public mode = 'create';\r\n  private id: string = null;\r\n  public task: Task;\r\n  isLoading = false;\r\n  taskForm: FormGroup;\r\n  constructor(\r\n    public tasksService: TasksService,\r\n    public route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((res: ParamMap) => {\r\n      if (res.has('id')) {\r\n        this.mode = 'edit';\r\n        this.id = res.get('id');\r\n        this.isLoading = true;\r\n        this.tasksService.getTasks(this.id).subscribe((res: any) => {\r\n          delete res.data.__v;\r\n          this.task = res.data;\r\n          this.isLoading = false;\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.id = null;\r\n      }\r\n    });\r\n  }\r\n  onCreateTask(form: NgForm) {\r\n    if (!form.valid) return;\r\n    const task: Task = {\r\n      _id: null,\r\n      title: form.value.title,\r\n      description: form.value.description,\r\n    };\r\n    if (this.mode === 'create') {\r\n      this.tasksService.addTask(task);\r\n    }\r\n    if (this.mode === 'edit') {\r\n      task._id = this.task._id;\r\n      this.tasksService.updateTask(task);\r\n    }\r\n    form.resetForm();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}