{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.authStatus = false;\n    this.authStatusListener = new Subject();\n  }\n  createUser(authData) {\n    this.http.post(\"http://localhost:3000/api/users/signup\", authData).subscribe(res => {\n      console.log(res);\n    });\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n  getToken() {\n    return this.token;\n  }\n  loginUser(authData) {\n    this.http.post(\"http://localhost:3000/api/users/login\", authData).subscribe(res => {\n      console.log(res);\n      this.token = res.data;\n      this.authStatus = true;\n      this.authStatusListener.next(true);\n    });\n  }\n  logout() {\n    this.token = null;\n    this.authStatus = false;\n    this.getAuthStatusListener.next(false);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,MAAM;;;;AAI9B,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAE5C,eAAU,GAAG,KAAK;IAClB,uBAAkB,GAAG,IAAIJ,OAAO,EAAW;EAHY;EAI/DK,UAAU,CAACC,QAAkB;IAC3B,IAAI,CAACH,IAAI,CACNI,IAAI,CAAC,wCAAwC,EAAED,QAAQ,CAAC,CACxDE,SAAS,CAAEC,GAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN;EACAG,qBAAqB;IACnB,OAAO,IAAI,CAACC,kBAAkB,CAACC,YAAY,EAAE;EAC/C;EACAC,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;EACAC,SAAS,CAACX,QAAkB;IAC1B,IAAI,CAACH,IAAI,CACNI,IAAI,CACH,uCAAuC,EACvCD,QAAQ,CACT,CACAE,SAAS,CAAEC,GAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACO,KAAK,GAAGP,GAAG,CAACS,IAAI;MACrB,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAI,CAACN,kBAAkB,CAACO,IAAI,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC;EACN;EACAC,MAAM;IACJ,IAAI,CAACL,KAAK,GAAG,IAAI;IACjB,IAAI,CAACG,UAAU,GAAG,KAAK;IACvB,IAAI,CAACP,qBAAqB,CAACQ,IAAI,CAAC,KAAK,CAAC;EACxC;;AAnCWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YADE;AAAM","names":["Subject","AuthService","constructor","http","router","createUser","authData","post","subscribe","res","console","log","getAuthStatusListener","authStatusListener","asObservable","getToken","token","loginUser","data","authStatus","next","logout","factory","providedIn"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/auth/auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { AuthData } from \"./auth-data.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthService {\n  constructor(private http: HttpClient, private router: Router) {}\n  private token: string;\n  private authStatus = false;\n  private authStatusListener = new Subject<boolean>();\n  createUser(authData: AuthData) {\n    this.http\n      .post(\"http://localhost:3000/api/users/signup\", authData)\n      .subscribe((res: any) => {\n        console.log(res);\n      });\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n  getToken() {\n    return this.token;\n  }\n  loginUser(authData: AuthData) {\n    this.http\n      .post<{ status: {}; data: string }>(\n        \"http://localhost:3000/api/users/login\",\n        authData\n      )\n      .subscribe((res: any) => {\n        console.log(res);\n        this.token = res.data;\n        this.authStatus = true;\n        this.authStatusListener.next(true);\n      });\n  }\n  logout() {\n    this.token = null;\n    this.authStatus = false;\n    this.getAuthStatusListener.next(false);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}