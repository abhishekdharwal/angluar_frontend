{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/progress-spinner\";\nimport * as i9 from \"@angular/forms\";\nfunction CreateTaskComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction CreateTaskComponent_mat_card_2_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter the title\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateTaskComponent_mat_card_2_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"img\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"alt\", ctx_r4.taskForm.value.title);\n  }\n}\nfunction CreateTaskComponent_mat_card_2_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter the description\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateTaskComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 2);\n    i0.ɵɵlistener(\"submit\", function CreateTaskComponent_mat_card_2_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCreateTask());\n    });\n    i0.ɵɵelementStart(2, \"mat-form-field\");\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵtemplate(4, CreateTaskComponent_mat_card_2_mat_error_4_Template, 2, 0, \"mat-error\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CreateTaskComponent_mat_card_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const _r3 = i0.ɵɵreference(9);\n      return i0.ɵɵresetView(_r3.click());\n    });\n    i0.ɵɵtext(7, \" Pick the image \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 5, 6);\n    i0.ɵɵlistener(\"change\", function CreateTaskComponent_mat_card_2_Template_input_change_8_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onImagePicked($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, CreateTaskComponent_mat_card_2_div_10_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementStart(11, \"mat-form-field\", 8)(12, \"mat-label\");\n    i0.ɵɵtext(13, \"Create Your task \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"textarea\", 9);\n    i0.ɵɵtemplate(15, CreateTaskComponent_mat_card_2_mat_error_15_Template, 2, 0, \"mat-error\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 10);\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"uppercase\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.taskForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.taskForm.get(\"title\").invalid);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.imagePreview && ctx_r1.imagePreview !== \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.taskForm.get(\"description\").invalid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 5, ctx_r1.mode), \" \");\n  }\n}\nexport class CreateTaskComponent {\n  constructor(tasksService, route) {\n    this.tasksService = tasksService;\n    this.route = route;\n    this.newTask = 'abhi';\n    this.enteredValue = 'Hey';\n    this.enteredTitle = ' ';\n    this.enteredDescription = '';\n    this.mode = 'create';\n    this.id = null;\n    this.isLoading = false;\n    this.imagePreview = null;\n  }\n  ngOnInit() {\n    this.taskForm = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(5)]\n      }),\n      description: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      image: new FormControl(null, {\n        validators: [Validators.required]\n      })\n    });\n    this.route.paramMap.subscribe(res => {\n      if (res.has('id')) {\n        this.mode = 'edit';\n        this.id = res.get('id');\n        this.isLoading = true;\n        this.tasksService.getTasks(this.id).subscribe(res => {\n          delete res.data.__v;\n          this.task = res.data;\n          this.isLoading = false;\n          this.taskForm.setValue({\n            title: this.task.title,\n            description: this.task.description\n          });\n        });\n      } else {\n        this.mode = 'create';\n        this.id = null;\n      }\n    });\n  }\n  onCreateTask() {\n    if (!this.taskForm.valid) return;\n    const task = {\n      _id: null,\n      title: this.taskForm.value.title,\n      description: this.taskForm.value.description\n    };\n    if (this.mode === 'create') {\n      this.tasksService.addTask(task);\n    }\n    if (this.mode === 'edit') {\n      task._id = this.task._id;\n      this.tasksService.updateTask(task);\n    }\n    this.taskForm.reset();\n  }\n  onImagePicked(event) {\n    const file = event.target.files[0];\n    this.taskForm.patchValue({\n      image: file\n    });\n    this.taskForm.get('image').updateValueAndValidity();\n    this.imageToDataUrl(file);\n    console.log(this.taskForm, file);\n  }\n  imageToDataUrl(file) {\n    const reader = new FileReader();\n    reader.onload = () => {\n      console.log(reader.result);\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n}\nCreateTaskComponent.ɵfac = function CreateTaskComponent_Factory(t) {\n  return new (t || CreateTaskComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nCreateTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTaskComponent,\n  selectors: [[\"app-task-create\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"div1\"], [4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"title\", \"formControlName\", \"title\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"filePicker\", \"\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"name\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Type your task\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\", 1, \"btn-1\"], [1, \"image-preview\"], [\"src\", \"\", 3, \"alt\"]],\n  template: function CreateTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CreateTaskComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CreateTaskComponent_mat_card_2_Template, 19, 7, \"mat-card\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i3.NgIf, i4.MatInput, i5.MatFormField, i5.MatLabel, i5.MatError, i6.MatCard, i7.MatButton, i8.MatProgressSpinner, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName, i3.UpperCasePipe],\n  styles: [\"mat-card[_ngcontent-%COMP%] {\\n  border: 1px solid;\\n  box-shadow: 1px 1px;\\n  margin-top: 10px;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.btn-1[_ngcontent-%COMP%] {\\n  width: 20%;\\n  margin-bottom: 8px;\\n  margin-left: 8px;\\n}\\n\\n.div1[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n}\\n\\n.image-preview[_ngcontent-%COMP%] {\\n  height: 5rem;\\n  margin: 1rem 0;\\n}\\n\\n.image-preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUNBOztFQUVFLFdBQUE7QUFFRjs7QUFDQTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FBRUY7O0FBQUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFHRjs7QUFBQTtFQUNFLFlBQUE7RUFDQSxjQUFBO0FBR0Y7O0FBQUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQUdGIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHg7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5tYXQtZm9ybS1maWVsZCxcclxudGV4dGFyZWEge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uYnRuLTEge1xyXG4gIHdpZHRoOiAyMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbn1cclxuLmRpdjEge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmltYWdlLXByZXZpZXcge1xyXG4gIGhlaWdodDogNXJlbTtcclxuICBtYXJnaW46IDFyZW0gMDtcclxufVxyXG5cclxuLmltYWdlLXByZXZpZXcgaW1nIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","CreateTaskComponent","constructor","tasksService","route","ngOnInit","taskForm","title","validators","required","minLength","description","image","paramMap","subscribe","res","has","mode","id","get","isLoading","getTasks","data","__v","task","setValue","onCreateTask","valid","_id","value","addTask","updateTask","reset","onImagePicked","event","file","target","files","patchValue","updateValueAndValidity","imageToDataUrl","console","log","reader","FileReader","onload","result","imagePreview","readAsDataURL","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/create.component.ts","/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Task } from '../task.model';\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  NgForm,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { TasksService } from '../task.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-task-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n})\r\nexport class CreateTaskComponent implements OnInit {\r\n  newTask = 'abhi';\r\n  enteredValue = 'Hey';\r\n  enteredTitle = ' ';\r\n  enteredDescription = '';\r\n  public mode = 'create';\r\n  private id: string = null;\r\n  public task: Task;\r\n  isLoading = false;\r\n  taskForm: FormGroup;\r\n  imagePreview = null;\r\n  constructor(\r\n    public tasksService: TasksService,\r\n    public route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.taskForm = new FormGroup({\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(5)],\r\n      }),\r\n      description: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, { validators: [Validators.required] }),\r\n    });\r\n    this.route.paramMap.subscribe((res: ParamMap) => {\r\n      if (res.has('id')) {\r\n        this.mode = 'edit';\r\n        this.id = res.get('id');\r\n        this.isLoading = true;\r\n        this.tasksService.getTasks(this.id).subscribe((res: any) => {\r\n          delete res.data.__v;\r\n          this.task = res.data;\r\n          this.isLoading = false;\r\n          this.taskForm.setValue({\r\n            title: this.task.title,\r\n            description: this.task.description,\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.id = null;\r\n      }\r\n    });\r\n  }\r\n  onCreateTask() {\r\n    if (!this.taskForm.valid) return;\r\n    const task: Task = {\r\n      _id: null,\r\n      title: this.taskForm.value.title,\r\n      description: this.taskForm.value.description,\r\n    };\r\n    if (this.mode === 'create') {\r\n      this.tasksService.addTask(task);\r\n    }\r\n    if (this.mode === 'edit') {\r\n      task._id = this.task._id;\r\n      this.tasksService.updateTask(task);\r\n    }\r\n    this.taskForm.reset();\r\n  }\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.taskForm.patchValue({ image: file });\r\n    this.taskForm.get('image').updateValueAndValidity();\r\n    this.imageToDataUrl(file);\r\n    console.log(this.taskForm, file);\r\n  }\r\n  imageToDataUrl(file: File) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      console.log(reader.result);\r\n      this.imagePreview = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n}\r\n","<div class=\"div1\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n</div>\r\n<mat-card *ngIf=\"!isLoading\">\r\n  <form [formGroup]=\"taskForm\" (submit)=\"onCreateTask()\">\r\n    <mat-form-field>\r\n      <input matInput type=\"text\" name=\"title\" formControlName=\"title\" />\r\n      <mat-error *ngIf=\"taskForm.get('title').invalid\">\r\n        Please enter the title</mat-error\r\n      >\r\n    </mat-form-field>\r\n    <div>\r\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">\r\n        Pick the image\r\n      </button>\r\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" />\r\n    </div>\r\n    <div class=\"image-preview\" *ngIf=\"imagePreview && imagePreview !== ''\">\r\n      <img src=\"\" [alt]=\"taskForm.value.title\" />\r\n    </div>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Create Your task </mat-label>\r\n      <textarea\r\n        matInput\r\n        name=\"description\"\r\n        formControlName=\"description\"\r\n        placeholder=\"Type your task\"\r\n      ></textarea>\r\n      <mat-error *ngIf=\"taskForm.get('description').invalid\"\r\n        >Please enter the description</mat-error\r\n      >\r\n    </mat-form-field>\r\n    <button class=\"btn-1\" mat-raised-button color=\"accent\" type=\"submit\">\r\n      {{ mode | uppercase }}\r\n    </button>\r\n  </form>\r\n</mat-card>\r\n\r\n<!-- (click)=\"onCreateTask()\" -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}