{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const isAuth = this.authService.getAuthStatus();\n    if (!isAuth) {\n      this.router.navigate([\"/login\"]);\n    }\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EACvEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,MAAM,GAAG,IAAI,CAACL,WAAW,CAACM,aAAa,EAAE;IAC/C,IAAI,CAACD,MAAM,EAAE;MACX,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAElC,OAAO,IAAI;EACb;;AAXWT,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAU,SAATV,SAAS;AAAA","names":["AuthGuard","constructor","authService","router","canActivate","route","state","isAuth","getAuthStatus","navigate","factory"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/auth/auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAuth = this.authService.getAuthStatus();\n    if (!isAuth) {\n      this.router.navigate([\"/login\"]);\n    }\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}