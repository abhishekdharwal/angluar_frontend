{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet CreateTaskComponent = class CreateTaskComponent {\n  constructor(tasksService, route) {\n    this.tasksService = tasksService;\n    this.route = route;\n    this.newTask = 'abhi';\n    this.enteredValue = 'Hey';\n    this.enteredTitle = ' ';\n    this.enteredDescription = '';\n    this.mode = 'create';\n    this.id = null;\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.taskForm = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(5)]\n      }),\n      description: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      image: new FormControl(null, {\n        validators: [Validators.required]\n      })\n    });\n    this.route.paramMap.subscribe(res => {\n      if (res.has('id')) {\n        this.mode = 'edit';\n        this.id = res.get('id');\n        this.isLoading = true;\n        this.tasksService.getTasks(this.id).subscribe(res => {\n          delete res.data.__v;\n          this.task = res.data;\n          this.isLoading = false;\n          this.taskForm.setValue({\n            title: this.task.title,\n            description: this.task.description\n          });\n        });\n      } else {\n        this.mode = 'create';\n        this.id = null;\n      }\n    });\n  }\n  onCreateTask() {\n    if (!this.taskForm.valid) return;\n    const task = {\n      _id: null,\n      title: this.taskForm.value.title,\n      description: this.taskForm.value.description\n    };\n    if (this.mode === 'create') {\n      this.tasksService.addTask(task);\n    }\n    if (this.mode === 'edit') {\n      task._id = this.task._id;\n      this.tasksService.updateTask(task);\n    }\n    this.taskForm.reset();\n  }\n  onImagePicked(event) {\n    const file = event.target.files[0];\n    this.taskForm.patchValue({\n      image: file\n    });\n    this.taskForm.get('image').updateValueAndValidity();\n    console.log(this.taskForm, file);\n  }\n};\nCreateTaskComponent = __decorate([Component({\n  selector: 'app-task-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})], CreateTaskComponent);\nexport { CreateTaskComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","CreateTaskComponent","constructor","tasksService","route","ngOnInit","taskForm","title","validators","required","minLength","description","image","paramMap","subscribe","res","has","mode","id","get","isLoading","getTasks","data","__v","task","setValue","onCreateTask","valid","_id","value","addTask","updateTask","reset","onImagePicked","event","file","target","files","patchValue","updateValueAndValidity","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/create/create.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Task } from '../task.model';\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  NgForm,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { TasksService } from '../task.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-task-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n})\r\nexport class CreateTaskComponent implements OnInit {\r\n  newTask = 'abhi';\r\n  enteredValue = 'Hey';\r\n  enteredTitle = ' ';\r\n  enteredDescription = '';\r\n  public mode = 'create';\r\n  private id: string = null;\r\n  public task: Task;\r\n  isLoading = false;\r\n  taskForm: FormGroup;\r\n  constructor(\r\n    public tasksService: TasksService,\r\n    public route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.taskForm = new FormGroup({\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(5)],\r\n      }),\r\n      description: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, { validators: [Validators.required] }),\r\n    });\r\n    this.route.paramMap.subscribe((res: ParamMap) => {\r\n      if (res.has('id')) {\r\n        this.mode = 'edit';\r\n        this.id = res.get('id');\r\n        this.isLoading = true;\r\n        this.tasksService.getTasks(this.id).subscribe((res: any) => {\r\n          delete res.data.__v;\r\n          this.task = res.data;\r\n          this.isLoading = false;\r\n          this.taskForm.setValue({\r\n            title: this.task.title,\r\n            description: this.task.description,\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.id = null;\r\n      }\r\n    });\r\n  }\r\n  onCreateTask() {\r\n    if (!this.taskForm.valid) return;\r\n    const task: Task = {\r\n      _id: null,\r\n      title: this.taskForm.value.title,\r\n      description: this.taskForm.value.description,\r\n    };\r\n    if (this.mode === 'create') {\r\n      this.tasksService.addTask(task);\r\n    }\r\n    if (this.mode === 'edit') {\r\n      task._id = this.task._id;\r\n      this.tasksService.updateTask(task);\r\n    }\r\n    this.taskForm.reset();\r\n  }\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.taskForm.patchValue({ image: file });\r\n    this.taskForm.get('image').updateValueAndValidity();\r\n    console.log(this.taskForm, file);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}