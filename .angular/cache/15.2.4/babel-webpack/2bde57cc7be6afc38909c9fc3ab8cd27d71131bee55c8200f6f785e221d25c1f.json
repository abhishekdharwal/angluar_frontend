{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/expansion\";\nfunction ListComponent_mat_expansion_panel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\")(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"mat-action-row\")(6, \"button\", 2);\n    i0.ɵɵtext(7, \"EDIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 2);\n    i0.ɵɵtext(9, \"DELETE\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.description, \" \");\n  }\n}\nfunction ListComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \"No Task Available\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ListComponent {\n  constructor(tasksService) {\n    this.tasksService = tasksService;\n    // tasks = [\n    //   { title: 'code for anuglar', description: 'mdule' },\n    //   { title: 'code for anuglar', description: 'mdule' },\n    // ];\n    this.storedTasks = [];\n    // tasks = [];\n    this.enteredTitle = '';\n  }\n  ngOnInit() {\n    this.tasksService.getTask();\n    this.tasksSub = this.tasksService.getTaskUpdateListener().subscribe(tasks => {\n      this.storedTasks = tasks;\n    });\n  }\n  ngOnDestroy() {\n    this.tasksSub.unsubscribe();\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"class\", \"mat-panel-title\", 4, \"ngIf\"], [\"mat-button\", \"\"], [1, \"mat-panel-title\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-accordion\");\n      i0.ɵɵtemplate(1, ListComponent_mat_expansion_panel_1_Template, 10, 2, \"mat-expansion-panel\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ListComponent_p_2_Template, 2, 0, \"p\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.storedTasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.storedTasks.length <= 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatButton, i4.MatAccordion, i4.MatExpansionPanel, i4.MatExpansionPanelActionRow, i4.MatExpansionPanelHeader, i4.MatExpansionPanelTitle],\n  styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAIEA,2CAAsD;IAGhDA,YACF;IAAAA,iBAAkB;IAEpBA,YACA;IAAAA,sCAAgB;IACKA,oBAAI;IAAAA,iBAAS;IAChCA,iCAAmB;IAAAA,sBAAM;IAAAA,iBAAS;;;;IANhCA,eACF;IADEA,8CACF;IAEFA,eACA;IADAA,oDACA;;;;;IAOJA,4BAA2D;IAAAA,iCAAiB;IAAAA,iBAAI;;;ACRhF,OAAM,MAAOC,aAAa;EAQxBC,YAAmBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAP/B;IACA;IACA;IACA;IACA,gBAAW,GAAW,EAAE;IAKxB;IACA,iBAAY,GAAG,EAAE;EAH+B;EAKhDC,QAAQ;IACN,IAAI,CAACD,YAAY,CAACE,OAAO,EAAE;IAC3B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,YAAY,CAC9BI,qBAAqB,EAAE,CACvBC,SAAS,CAAEC,KAAa,IAAI;MAC3B,IAAI,CAACC,WAAW,GAAGD,KAAK;IAC1B,CAAC,CAAC;EACN;EACAE,WAAW;IACT,IAAI,CAACL,QAAQ,CAACM,WAAW,EAAE;EAC7B;;AAvBWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1BjB,qCAAe;MAIbA,+FAWsB;MAAAA,iBACvB;MAEDA,0DAAgF;;;MAdxCA,eAAc;MAAdA,yCAAc;MAc1BA,eAA6B;MAA7BA,kDAA6B","names":["i0","ListComponent","constructor","tasksService","ngOnInit","getTask","tasksSub","getTaskUpdateListener","subscribe","tasks","storedTasks","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/list/list.component.html","/home/abhishek/WORK/TODO_MEAN/Frontend/src/app/tasks/list/list.component.ts"],"sourcesContent":["<mat-accordion>\n  <!-- <mat-form-field>\n    <input matInput type=\"text\" [(ngModel)]=\"enteredTitle\" />\n  </mat-form-field> -->\n  <mat-expansion-panel *ngFor=\"let task of storedTasks\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{ task.title }}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    {{ task.description }}\n    <mat-action-row>\n      <button mat-button>EDIT</button>\n      <button mat-button>DELETE</button>\n    </mat-action-row>\n  </mat-expansion-panel></mat-accordion\n>\n\n<p class=\"mat-panel-title\" *ngIf=\"storedTasks.length <= 0\">No Task Available</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Task } from '../task.model';\nimport { TasksService } from '../task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit, OnDestroy {\n  // tasks = [\n  //   { title: 'code for anuglar', description: 'mdule' },\n  //   { title: 'code for anuglar', description: 'mdule' },\n  // ];\n  storedTasks: Task[] = [];\n  private tasksSub: Subscription;\n\n  constructor(public tasksService: TasksService) {}\n\n  // tasks = [];\n  enteredTitle = '';\n\n  ngOnInit() {\n    this.tasksService.getTask();\n    this.tasksSub = this.tasksService\n      .getTaskUpdateListener()\n      .subscribe((tasks: Task[]) => {\n        this.storedTasks = tasks;\n      });\n  }\n  ngOnDestroy() {\n    this.tasksSub.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}